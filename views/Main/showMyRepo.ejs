<%- include('../partials/header') %>

  <body class="bg-gray-50 dark:bg-gray-900">
    <div class="flex h-screen">
      <%- include('../partials/sidebar') %>
        <div class="flex flex-col flex-1">
          <%- include('../partials/navbar') %>
            <main class="h-fit pb-16 overflow-y-auto" style="padding: 4rem;">
              <!-- Repository Container -->
              <div class="bg-gray-100 dark:bg-gray-800 py-8">
                <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
                  <div class="flex flex-col md:flex-row w-full -mx-4">
                    <div class="md:flex-1 px-4">
                      <div class="h-[460px] rounded-lg p-2 bg-gray-300 dark:bg-gray-700 mb-4">
                        <img class="object-cover" src="/uploads/<%= repo.project_image_path %>" alt="Product Image"
                          width="200px" height="200px">
                      </div>

                      <div class="flex -mx-2 mb-4">
                        <% if (owner) { %>
                          <div class="w-1/2 px-2">
                            <button
                              class="flex items-center bg-blue-600 hover:bg-blue-700 text-gray-100 px-4 py-2 rounded text-sm space-x-2 transition duration-100"
                              id="editProfileBtn" style="gap: 5px;padding: 10px 30px ;">
                              <i class="fas fa-edit" style="color: #ffffff;"></i>
                              <span class="text-white">Edit</span>
                            </button>
                          </div>
                          <div class="w-1/2 px-2">
                            <button onclick="deleteRepo('<%= repo.id %>')"
                              class="w-full bg-red-600 dark:bg-gray-700 text-white dark:text-white py-2 px-4 rounded-lg font-bold hover:bg-red-700 dark:hover:bg-gray-600 transition-all duration-300 shadow-md">
                              Delete
                            </button>
                          </div>
                          <% } else { %>
                            <% if (downloadAllow) { %>

                              <div class="w-1/2 px-2">
                                <button
                                  class="flex items-center new-repo-btn text-gray-100 px-4 py-2 rounded text-sm space-x-2 transition duration-100"
                                  style="gap: 5px;" id="downloadBtn">
                                  <i class="fas fa-download" style="color: #ffffff;"></i>
                                  <span class="text-white">Download Repo</span>

                                </button>
                                <a href="/uploads/<%= repo.zip_file_path %>" class="hidden" id="downloadLink"
                                  download></a>
                              </div>
                              <% } else { %>

                                <div class="w-1/2 px-2">
                                  <button
                                    class="flex items-center new-repo-btn text-gray-100 px-4 py-2 rounded text-sm space-x-2 transition duration-100"
                                    style="gap: 5px;background: blue;" id="requestBtn">
                                    <span class="text-white">Request Repo</span>
                                  </button>
                                </div>
                                <% } %>
                                  <% } %>
                      </div>
                    </div>
                    <div class="md:flex-1 p-2 w-full relative">
                      <div class="flex justify-between items-center">
                        <h2 class="text-2xl flex font-bold text-gray-800 dark:text-white mb-2">
                          <p id="ownerName"><a href="/profile/<%= repo.user_id %>" class="hover:underline"
                              id="ownerName">
                              <%= name %>
                            </a></p> /<%= repo.title %>
                        </h2>
                        <p class="dark:text-gray-300">ðŸ“… Created: <span id="repoCreated">
                            <%= new Date(repo.created_at).toLocaleDateString() %>
                          </span></p>
                      </div>
                      <div>
                        <% if (repo.live_project_url !='' ) { %>
                          <a href="<%= repo.live_project_url %>" target="_blank"
                            class="dark:text-gray-300 flex  text-sm mb-4" style="color: blue;gap: 2px;">Check Live
                            Project <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="currentColor"
                              viewBox="0 0 512 512"><!--!Font Awesome Free 6.7.2 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2025 Fonticons, Inc.-->
                              <path
                                d="M352 0c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9L370.7 96 201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L416 141.3l41.4 41.4c9.2 9.2 22.9 11.9 34.9 6.9s19.8-16.6 19.8-29.6l0-128c0-17.7-14.3-32-32-32L352 0zM80 32C35.8 32 0 67.8 0 112L0 432c0 44.2 35.8 80 80 80l320 0c44.2 0 80-35.8 80-80l0-112c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 112c0 8.8-7.2 16-16 16L80 448c-8.8 0-16-7.2-16-16l0-320c0-8.8 7.2-16 16-16l112 0c17.7 0 32-14.3 32-32s-14.3-32-32-32L80 32z" />
                            </svg></a>
                          <% } %>
                            <div class="flex justify-start mb-2 items-center dark:text-gray-300" style="gap: 12px;">
                              <i class="fas fa-download" style="color: black;"></i>
                              <%= repo.total_downloads %>
                                Downloads
                            </div>

                            <div class="flex mb-4">
                              <div class="mr-4">
                                <span class="font-bold text-gray-700 dark:text-gray-300">Domain:</span>
                                <span class="text-gray-600 dark:text-gray-300">
                                  <%= repo.domain %>
                                </span>
                              </div>
                              <div>
                                <span class="font-bold text-gray-700 dark:text-gray-300">Tech Stack:</span>
                                <span class="text-gray-600 dark:text-gray-300">
                                  <%= repo.tech_stack %>
                                </span>
                              </div>
                            </div>

                            <div>
                              <span class="font-bold text-gray-700 dark:text-gray-300">Project Description:</span>
                              <p class="text-gray-600 font-mono dark:text-gray-300 text-sm mt-2">
                                <%= repo.description %>
                              </p>
                            </div>
                            <div class="absolute bottom-0 right-0" style="top: 85%;">
                              <% if (isSaved) { %>
                                <i class="fa-solid fa-bookmark" style="font-size: large;"
                                  onclick="unsaveProject('<%= repo.id %>')"></i>
                                <% } else { %>
                                  <i class="fa-regular fa-bookmark" style="font-size: large;"
                                    onclick="saveProject('<%= repo.id %>')"></i>
                                  <% } %>


                            </div>
                      </div>
                    </div>
                  </div>
                </div>
                <% if (moreRepos.length> 0) { %>
                  <div style="text-align: left;">
                    <h2 class="text-2xl" style="padding: 2rem;">More on <%= repo.domain %>
                    </h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                      <% moreRepos.forEach(repo=> { %>
                        <div
                          class="repo bg-white dark:bg-gray-800 relative flex flex-col justify-center rounded-lg shadow-md p-4 transition-transform transform hover:scale-105"
                          style="width: 370px;margin-left:2rem ;margin-bottom: 2rem;">
                          <h3 class="text-lg font-semibold text-gray-800 dark:text-gray-100">
                            <%= repo.title %>
                          </h3>
                          <p class="text-xs text-gray-500 dark:text-gray-400 mb-2">ðŸ“… Created: <%= new
                              Date(repo.created_at).toLocaleDateString() %>
                          </p>
                          <div class="flex flex-col flex-grow mt-4 px-2">
                            <p class="text-sm text-gray-600 dark:text-gray-400">
                              <%= repo.domain || "No description provided" %>
                            </p>

                            <div class="flex gap-4 mt-4" style="gap: 15px;">
                              <a href="/repo/<%= repo.id %>"
                                class="px-4 py-2 bg-purple-600 text-white font-medium rounded-lg hover:bg-purple-700 transition">
                                Show Repo
                              </a>
                              <% if (owner) { %>
                                <button onclick="deleteRepo('<%= repo.id %>')"
                                  class="px-4 py-2 bg-red-600 text-white font-medium rounded-lg hover:bg-red-700 transition">
                                  Delete
                                </button>
                                <% } %>
                            </div>
                          </div>
                        </div>
                        <% }); %>
                    </div>
                  </div>
                  <% } else { %>
                    <div class="text-center text-gray-600 mb-2 dark:text-gray-300 text-sm mt-2">
                      No more repositories found on this domain.
                    </div>
                    <% } %>

            </main>

        </div>
    </div>
    <script>

      if ("<%= owner %>" == "true") {
        document.getElementById("editProfileBtn").addEventListener("click", function () {
          Swal.fire({
            title: "Edit Project",
            showClass: {
              popup: `animate__animated animate__fadeInUp animate__faster`
            },
            hideClass: {
              popup: `animate__animated animate__fadeOutDown animate__faster`
            },
            html: `
           <div class="text-left space-y-4 px-2 py-2">
                <label class="block text-gray-700 font-medium">Title :</label>
                <input id="swal-title" class="w-full p-2 border rounded-lg focus:ring focus:ring-blue-400" value="<%= repo.title %>">
                <p id="error-fullName" class="text-red-500 text-sm hidden">Project title cannot be empty.</p>

                <label class="block text-gray-700 font-medium">Live Project URL(Optional):</label>
                <input id="swal-live_url" type="url" class="w-full p-2 border rounded-lg focus:ring focus:ring-blue-400" value="<%= repo.live_project_url %>">

                <label class="block text-gray-700 font-medium">Domain :</label>
                 <select id="domain_use" name="domain"
                                        class="block w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500 dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200 transition duration-200">
                                        <option value="">Select</option>
                                        <option value="Web Development">Web Development</option>
                                        <option value="Mobile App Development">Mobile App Development</option>
                                        <option value="AI & Machine Learning">AI & Machine Learning</option>
                                        <option value="Blockchain">Blockchain</option>
                                        <option value="Cybersecurity">Cybersecurity</option>
                                        <option value="Game Development">Game Development</option>
                                        <option value="Embedded Systems">Embedded Systems</option>
                                        <option value="IoT (Internet of Things)">IoT (Internet of Things)</option>
                                        <option value="Cloud Computing">Cloud Computing</option>
                                        <option value="Data Science">Data Science</option>
                                        <option value="Computer Vision">Computer Vision</option>
                                        <option value="Natural Language Processing">Natural Language Processing</option>
                                        <option value="AR/VR (Augmented & Virtual Reality)">AR/VR (Augmented & Virtual
                                            Reality)</option>
                                        <option value="DevOps & Automation">DevOps & Automation</option>
                                        <option value="Big Data">Big Data</option>
                                        <option value="Networking">Networking</option>
                                        <option value="Software Testing & QA">Software Testing & QA</option>
                                        <option value="Operating Systems">Operating Systems</option>
                                    </select>
                                     <p id="error-location" class="text-red-500 text-sm hidden">Project Domain cannot be empty.</p>

                <label class="block text-gray-700 font-medium">Description :</label>
                <textarea id="swal-desc" type="text" class="w-full p-2 border rounded-lg focus:ring focus:ring-blue-400" ><%= repo.description %></textarea>
                <p id="error-languages" class="text-red-500 text-sm hidden">Languages cannot be empty.</p>
            </div>
        `,
            showCancelButton: true,
            confirmButtonText: "Save Changes",
            cancelButtonText: "Cancel",
            preConfirm: () => {
              let valid = true;

              const title = document.getElementById("swal-title").value.trim();
              const live = document.getElementById("swal-live_url").value;
              const domain = document.getElementById("domain_use").value.trim();
              const desc = document.getElementById("swal-desc").value.trim();
              document.querySelectorAll(".text-red-500").forEach(el => el.classList.add("hidden"));

              if (!title) {
                document.getElementById("error-fullName").classList.remove("hidden");
                valid = false;
              }
              if (domain == '') {
                document.getElementById("error-location").classList.remove("hidden");
                valid = false;
              }
              if (!desc) {
                document.getElementById("error-languages").classList.remove("hidden");
                valid = false;
              }
              if (!valid) {
                return false;
              }

              return { title, live, domain, desc };
            }
          }).then((result) => {
            if (result.isConfirmed && result.value) {
              confirmUpdate(result.value);
            }
          });
        });

        function confirmUpdate(profileData) {
          Swal.fire({
            title: "Save Changes ?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, update it!",
            cancelButtonText: "No, cancel"
          }).then((result) => {
            if (result.isConfirmed) {
              fetch("/update-project/<%= repo.id %>", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(profileData)
              })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    Swal.fire("Updated!", "Your Project has been updated.", "success").then(() => {
                      location.reload();
                    });
                  } else {
                    Swal.fire("Error!", "Failed to update Project. Try again.", "error");
                  }
                })
                .catch(error => {
                  Swal.fire("Error!", "Something went wrong.", "error");
                });
            }
          });
        }
        function deleteRepo(repoId) {
          Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
          }).then((result) => {
            if (result.isConfirmed) {
              fetch(`/delete-repo/${repoId}`, { method: "DELETE" })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    Swal.fire("Deleted!", "Your repository has been deleted.", "success")
                      .then(() => location.assign("/myRepos"));
                  } else {
                    Swal.fire("Error!", "Something went wrong.", "error");
                  }
                })
                .catch(() => Swal.fire("Error!", "Failed to delete repository.", "error"));
            }
          });
        }
      }
      if ("<%= downloadAllow %>" == "true") {
        document.getElementById("downloadBtn").addEventListener("click", async (event) => {
          event.preventDefault();
          var a = document.getElementById("downloadLink");
          const res = await fetch("/inc_download/<%= repo.id %>", {
            method: "POST",
            headers: { "Content-Type": "application/json" }
          })
          const data = await res.json()
          if (data.error) {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: data.error,
              showConfirmButton: false,
              timer: 1500
            })
          }
          if (data.success) {
            a.click()
            Swal.fire({
              icon: 'success',
              title: 'Downloaded Successfully',
              showConfirmButton: false,
              timer: 1500
            }).then(() => location.reload())

          }

        })
      }
      function timeAgo(date) {
        const now = new Date();
        const seconds = Math.floor((now - date) / 1000);

        const intervals = {
          year: 31536000,
          month: 2592000,
          week: 604800,
          day: 86400,
          hour: 3600,
          minute: 60,
          second: 1
        };

        for (const [unit, value] of Object.entries(intervals)) {
          const count = Math.floor(seconds / value);
          if (count >= 1) {
            return `${count} ${unit}${count > 1 ? 's' : ''} ago`;
          }
        }
        return "just now";
      }
      function saveProject(repoId) {
        fetch(`/save-project/${repoId}`, { method: "POST" })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: 'Saved Successfully',
                showConfirmButton: false,
                timer: 1500
              }).then(() => location.reload())
            } else {
              Swal.fire("Error!", "Something went wrong.", "error");
            }
          })
          .catch(() => Swal.fire("Error!", "Failed to save repository.", "error"));
      }
      function unsaveProject(repoId) {
        fetch(`/unsave-project/${repoId}`, { method: "POST" })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: 'Unsaved Successfully',
                showConfirmButton: false,
                timer: 1500
              }).then(() => location.reload())
            } else {
              Swal.fire("Error!", "Something went wrong.", "error");
            }
          })
          .catch(() => Swal.fire("Error!", "Failed to unsave repository.", "error"));
      }
      document.getElementById("requestBtn").addEventListener("click", async () => {
        // Show SweetAlert input
        const { value: reason } = await Swal.fire({
          title: 'Why do you want to download this repository?',
          input: 'textarea',
          inputPlaceholder: 'Type your reason here...',
          showCancelButton: true,
          confirmButtonText: 'Submit Request',
          preConfirm: (reason) => {
            if (!reason) {
              Swal.showValidationMessage('Please provide a reason!');
            }
            return reason;
          }
        });

        // If user submitted a reason
        if (reason) {
          try {
            const response = await fetch('/request-download', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                repoId: '<%= repo.id %>', // replace with actual repo ID
                reason: reason,
                owner: '<%= repo.user_id %>'
              })
            });

            const data = await response.json();

            if (data.success) {
              Swal.fire({
                icon: 'success',
                title: 'Request Sent!',
                text: 'The repository owner will review your request.',
                timer: 2000,
                showConfirmButton: false
              });

              // Optional: update button UI
              const btn = document.getElementById("requestBtn");
              btn.textContent = "Request Pending";
              btn.disabled = true;

            } else {
              Swal.fire('Error', data.message || 'Failed to send request.', 'error');
            }

          } catch (err) {
            Swal.fire('Error', 'Something went wrong! Try again later.', 'error');
          }
        }
      });

    </script>
  </body>

  </html>